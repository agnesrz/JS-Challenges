  static romanEquivalents: {
    1: 'I',
    5: 'V',
    9: 'IV',
    10: 'X',
    40: 'XL'
    50: 'L',
    90: 'XC',
    100: 'C',
    400: 'CD',
    500: 'D',
    900: 'CM'
    1000: 'M'
  }
  
Create a variable to store the roman numeral (finalRoman)
Create a variable to store the current number (workingNum) and set it equal to original number
Create a variable to store an array containing all numbers that have a direct roman equivalent (coversionArr)
  -extract the keys from the romanEquivalents object
  -map them so the keys are converted to a number
  -sort by size (largest to smallest)
-Create a loop that continues while workingNum is greater than 0. Upon each iteration
  -Find the first number in the conversionArr that is less than or equal to the workingNum
  -push the roman equivalent of that number to finalRoman
  -subtract that number from the workingNum
-Return finalRoman;

  
